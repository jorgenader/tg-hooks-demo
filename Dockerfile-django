# Development Dockerfile for Django app
FROM python:3.6.6-alpine

ENV PYTHONUNBUFFERED 0

# Expose our application port
EXPOSE 80

# Install system requirements
RUN apk add --no-cache \
    ca-certificates alpine-sdk postgresql-dev python3-dev linux-headers musl-dev \
    libffi-dev jpeg-dev zlib-dev bash gettext git

# Copy wait-for-it.sh script
COPY ./wait-for-it.sh /usr/bin/

# Copy Python requirements dir and Install requirements
RUN pip install -U pipenv pip setuptools wheel

COPY Pipfile /
COPY Pipfile.lock /

# Install all dependencies from Pipfile.lock file
RUN pipenv install --system --dev --ignore-pipfile

# Check for security warnings, will be enabled later when failing dependencies have been updated
# RUN pipenv check --system

# Set the default directory where CMD will execute
WORKDIR /app

# Run Django's runserver by default
CMD python manage.py runserver 0.0.0.0:80
